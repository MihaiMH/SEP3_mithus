@page "/MakePost"
@using HttpClients.ClientInterfaces
@using Domain.DTOs
@inject IPostService postService;

<HeaderEl title="Post your property" description="Lorem ipsum dolor sit amet consectetur. Pretium sit massa semper vestibulum tellus ut tristique nibh placerat in id. "/>

<div class="pageContent">

    <h1 class="body_title">
        <b>Post something</b>
    </h1>

    <div class="container card">
        <form action="action_page.php">
            <label for="title">Title</label>
            <input type="text" id="title" name="title" placeholder="Title..." @bind="Title" bind:event="oninput">

            <label for="Description">Description</label>
            <input type="text" id="Description" name="Description" placeholder="Description..." @bind="Description" bind:event="oninput">

            <label for="Street">Street</label>
            <input type="text" id="Street" name="Street" placeholder="Street..." @bind="Street" bind:event="oninput">

            <label for="Area">Area</label>
            <input type="text" id="Area" name="Area" placeholder="Area..." @bind="Area" bind:event="oninput">

            <label for="Utilities">Utilities</label>
            <input type="text" id="Utilities" name="Utilities" placeholder="Utilities..." @bind="Utilities" bind:event="oninput">


            <div class="bodyDiv">
                <div class="intInput">
                    <label for="maxTenants">Max Tenants</label>
                    <label for="deposit">Deposit</label>
                    <label for="monthlyRent">Monthly rent</label>
                </div>
                <div class="intInputs">
                    <input type="number" min="1" max="7" step="1" value="1" id="maxTenants" name="maxTenants" @onchange=@(e => MaxTenants = int.Parse(e.Value.ToString()))>
                    <input type="number" min="0" max="10000" step="1000" value="0" id="deposit" name="deposit" @onchange=@(e => Deposit = double.Parse(e.Value.ToString()))>
                    <input type="number" min="0" max="10000" step="1000" value="0" id="monthlyRent" name="deposit" @onchange=@(e => MonthlyRent = double.Parse(e.Value.ToString()))>
                </div>
                <div class="intInput">
                    <label for="moveInPrice">Move in Price</label>
                    <label for="energy" class="energy">Energy rating</label>
                    <label for="type" class="type">Type</label>
                </div>
                <div class="intInputs">
                    <input type="number" min="0" max="10000" step="1000" value="0" id="moveInPrice" name="maxTenants" @onchange=@(e => MoveInPrice = double.Parse(e.Value.ToString()))>
                    <select name="energy" id="energy" @bind="EnergyRating" bind:event="oninput">
                        <option value="A">A</option>
                        <option value="B">B</option>
                        <option value="C">C</option>
                        <option value="D">D</option>
                        <option value="E">E</option>
                        <option value="F">F</option>
                        <option value="G">G</option>
                    </select>
                    <select name="type" id="type" @bind="Type" bind:event="oninput">
                        <option value="A">Penthouse</option>
                        <option value="B">Studio</option>
                        <option value="C">Duplex</option>
                        <option value="D">1 bedroom</option>
                        <option value="E">Luxury</option>
                    </select>
                </div>
            </div>

            <div class="radioButtonHolder">
                Furnished
                <input type="checkbox" id="IsFurnished" name="IsFurnished" @bind="IsFurnished" bind:event="oninput">

                Balcony
                <input type="checkbox" id="HasBalcony" name="HasBalcony" @bind="HasBalcony" bind:event="oninput">

                Smoking area
                <input type="checkbox" id="SmokingArea" name="SmokingArea" @bind="SmokingAllowed" bind:event="oninput">

                Parking
                <input type="checkbox" id="SmokingArea" name="SmokingArea" @bind="SmokingAllowed" bind:event="oninput">

            </div>

            <div class="radioButtonHolder">
                Dish washer
                <input type="checkbox" id="DishWasher" name="DishWasher" @bind="HasDishwasher" bind:event="oninput">

                Washing machine
                <input type="checkbox" id="WashingMachine" name="WashingMachine" @bind="HasWashingMachine" bind:event="oninput">

                Dryer
                <input type="checkbox" id="Dryer" name="Dryer" @bind="HasDryer" bind:event="oninput">
            </div>

            <div class="bottomEllements">
                <div class="imageBody">
                    <label for="Images" class="imageHolder">
                        Upload Image
                        <img src="img/photo.png" class="photoIcon"/>
                        <input type="file" id="Images" name="Images" onchange="" multiple>
                        @* <InputFile OnChange="" multiple=""></InputFile> *@
                    </label>
                </div>
                <div class="mamZaebit">
                    <label for="start">Creation Date</label>
                    <input type="date" id="start" name="trip-start" value="2023-10-31" min="2023-10-31" max="2030-12-31" @onchange=@(e => CreationDate = DateTime.Parse(e.Value.ToString()))/>
                </div>
            </div>
            <button type="button" class="submitBtn" @onclick="Create">Post something</button>
        </form>
    </div>

</div>

@code {
    public string UserID { get; set; }
    public string Title { get; set; }
    public string Description { get; set; }
    public string Street { get; set; }
    public double Area { get; set; }
    public bool IsFurnished { get; set; }
    public bool HasBalcony { get; set; }
    public bool SmokingAllowed { get; set; }

    public int MaxTenants { get; set; }

    public string Type { get; set; }

    public string EnergyRating { get; set; }
    public bool HasDishwasher { get; set; }
    public bool HasWashingMachine { get; set; }
    public bool HasDryer { get; set; }
    public double MonthlyRent { get; set; }
    public double Deposit { get; set; }
    public double MoveInPrice { get; set; }
    public double Utilities { get; set; }
    public DateTime CreationDate { get; set; }
    public string Status { get; set; }

    private async Task Create()
    {
    // resultMsg = "";

        try
        {
            PostCreationDTO postDto = new PostCreationDTO
            {
                Title = Title,
                Description = Description,
                Street = Street,
                Area = Area,
                IsFurnished = IsFurnished,
                HasBalcony = HasBalcony,
                SmokingAllowed = SmokingAllowed,
                MaxTenants = MaxTenants,
                Type = Type,
                EnergyRating = EnergyRating,
                HasDishwasher = HasDishwasher,
                HasWashingMachine = HasDishwasher,
                HasDryer = HasDryer,
                MonthlyRent = MonthlyRent,
                Deposit = Deposit,
                MoveInPrice = MoveInPrice,
                Utilities = Utilities
            };


            await postService.CreatePostAsync(postDto);
    // username = "";
    // resultMsg = "User successfully created";
    // color = "green";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
    // resultMsg = e.Message;
    // color = "red";
        }
    }

}