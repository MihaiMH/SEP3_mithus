@namespace UIComponents
@using Microsoft.AspNetCore.Components.Authorization;
@using HttpClients.ClientInterfaces
@using System.Security.Claims
@inject IUserService userService
@inject NavigationManager _nav;


<AuthorizeView Policy="MustBeAdmin">
    <Authorized>
        <div class="navigation ">
            <div class="logolinks">
                <a href="" class="logobox">
                    <div class="logodiv">
                        <img src="img/image%203.png" class="logoimg">
                    </div>
                    <div class="logotext">
                        <h1>MiTHus</h1>
                    </div>
                </a>
                <div class="linkbox">
                    <div class="linkdiv">
                        <a href="">Home</a>
                    </div>
                    <div class="linkdiv">
                        <a href="MyPosts">My Posts</a>
                    </div>
                    <div class="linkdiv">
                        <a href="MakePost">Make post</a>
                    </div>
                    @* <div class="linkdiv"> *@
                    @*     <a href="AdministratorPage">Admin</a> *@
                    @* </div> *@
                    <div class="linkdiv">
                        <a href="CreateModerator">Manage users</a>
                    </div>
                    <div class="linkdiv">
                        <a href="SeePendingPosts">Pending posts</a>
                    </div>
                    <div class="linkdiv">
                        <a href="PendingUsers">Pending users</a>
                    </div>
                </div>
            </div>
            <div class="contact">
                <a href="ManageAccount">Hi, @context.User.FindFirst("Firstname").Value</a>
                <a href="" @onclick="LogOutAsync">Log out</a>
                <a href="/ContactUs" class="">Contact us </a>
            </div>
        </div>
        <script>
            const navigationEl123 = document.querySelector('.navigation');
            window.addEventListener('scroll', () => {
                if (window.scrollY > 50) {
                    navigationEl123.classList.add('solid');
                } else {
                    navigationEl123.classList.remove('solid');
                }
            })
            
        </script>
    </Authorized>
</AuthorizeView>
<AuthorizeView Policy="MustBeLandlord">
    <Authorized >
        <div class="navigation ">
            <div class="logolinks">
                <a href="" class="logobox">
                    <div class="logodiv">
                        <img src="img/image%203.png" class="logoimg">
                    </div>
                    <div class="logotext">
                        <h1>MiTHus</h1>
                    </div>
                </a>
                <div class="linkbox">
                    <div class="linkdiv">
                        <a href="">Home</a>
                    </div>
                    <div class="linkdiv">
                        <a href="MyPosts">My Posts</a>
                    </div>
                    <div class="linkdiv">
                        <a href="MakePost">Make post</a>
                    </div>
                    @* <div class="linkdiv"> *@
                    @*     <a href="AdministratorPage">Admin</a> *@
                    @* </div> *@

                </div>
            </div>
            <div class="contact">
                <a href="ManageAccount">Hi, @context.User.FindFirst("Firstname").Value</a>
                <a href="" @onclick="LogOutAsync">Log out</a>
                <a href="/ContactUs" class="">Contact us </a>
            </div>
        </div>
        <script>
            const navigationEl1234 = document.querySelector('.navigation');
            window.addEventListener('scroll', () => {
                if (window.scrollY > 50) {
                    navigationEl1234.classList.add('solid');
                } else {
                    navigationEl1234.classList.remove('solid');
                }
            })
            
        </script>
    </Authorized>
</AuthorizeView>

<AuthorizeView Policy="MustBeMod">
    <Authorized >
        <div class="navigation ">
            <div class="logolinks">
                <a href="" class="logobox">
                    <div class="logodiv">
                        <img src="img/image%203.png" class="logoimg">
                    </div>
                    <div class="logotext">
                        <h1>MiTHus</h1>
                    </div>
                </a>
                <div class="linkbox">
                    <div class="linkdiv">
                        <a href="">Home</a>
                    </div>
                    <div class="linkdiv">
                        <a href="MyPosts">My Posts</a>
                    </div>
                    <div class="linkdiv">
                        <a href="MakePost">Make post</a>
                    </div>
                    <div class="linkdiv">
                        <a href="SeePendingPosts">Pending posts</a>
                    </div>
                    <div class="linkdiv">
                        <a href="PendingUsers">Pending users</a>
                    </div>
                </div>
            </div>
            <div class="contact">
                 <a href="ManageAccount">Hi, @context.User.FindFirst("Firstname").Value</a>
                <a href="" @onclick="LogOutAsync">Log out</a>
                <a href="/ContactUs" class="">Contact us </a>
            </div>
        </div>

        <script>
            const navigationEl1231 = document.querySelector('.navigation');
            window.addEventListener('scroll', () => {
                if (window.scrollY > 50) {
                    navigationEl1231.classList.add('solid');
                } else {
                    navigationEl1231.classList.remove('solid');
                }
            })
            
        </script>
    </Authorized>
</AuthorizeView>

<AuthorizeView Policy="MustBeClient">
    <Authorized >
        <div class="navigation ">
            <div class="logolinks">
                <a href="" class="logobox">
                    <div class="logodiv">
                        <img src="img/image%203.png" class="logoimg">
                    </div>
                    <div class="logotext">
                        <h1>MiTHus</h1>
                    </div>
                </a>
                <div class="linkbox">
                    <div class="linkdiv">
                        <a href="">Home</a>
                    </div>
                    <div class="linkdiv">
                        <a href="" @onclick="RequestLandLordStatus">Request LandLord Status</a>
                    </div>
                </div>
            </div>
            <div class="contact">
                <a href="ManageAccount">Hi, @context.User.FindFirst("Firstname").Value</a>
                <a href="" @onclick="LogOutAsync">Log out</a>
                <a href="/ContactUs" class="">Contact us </a>
            </div>
        </div>
        <script>
            const navigationEl1232 = document.querySelector('.navigation');
            window.addEventListener('scroll', () => {
                if (window.scrollY > 50) {
                    navigationEl1232.classList.add('solid');
                } else {
                    navigationEl1232.classList.remove('solid');
                }
            })
            
        </script>
    </Authorized>
</AuthorizeView>
<AuthorizeView Policy="MustBePending">
    <Authorized >
        <div class="navigation ">
            <div class="logolinks">
                <a href="" class="logobox">
                    <div class="logodiv">
                        <img src="img/image%203.png" class="logoimg">
                    </div>
                    <div class="logotext">
                        <h1>MiTHus</h1>
                    </div>
                </a>
                <div class="linkbox">
                    <div class="linkdiv">
                        <a href="">Home</a>
                    </div>

                </div>
            </div>
            <div class="contact">
                 <a href="ManageAccount">Hi, @context.User.FindFirst("Firstname").Value</a>
                <a href="" @onclick="LogOutAsync">Log out</a>
                <a href="/ContactUs" class="">Contact us </a>
            </div>
        </div>
        <script>
            const navigationEl1232 = document.querySelector('.navigation');
            window.addEventListener('scroll', () => {
                if (window.scrollY > 50) {
                    navigationEl1232.classList.add('solid');
                } else {
                    navigationEl1232.classList.remove('solid');
                }
            })
            
        </script>
    </Authorized>
</AuthorizeView>
<AuthorizeView>
    <NotAuthorized>
        <div class="navigation ">
            <div class="logolinks">
                <a href="" class="logobox">
                    <div class="logodiv">
                        <img src="img/image%203.png" class="logoimg">
                    </div>
                    <div class="logotext">
                        <h1>MiTHus</h1>
                    </div>
                </a>
                <div class="linkbox">
                    <div class="linkdiv">
                        <a href="">Home</a>
                    </div>
                </div>
            </div>
            <div class="contact">
                <a href="Login">Login</a>
                <a href="/ContactUs" class="">Contact us </a>
            </div>
        </div>
        <script>
                    const navigationEl1233 = document.querySelector('.navigation');
                    window.addEventListener('scroll', () => {
                        if (window.scrollY > 50) {
                            navigationEl1233.classList.add('solid');
                        } else {
                            navigationEl1233.classList.remove('solid');
                        }
                    })
                    
                </script>
    </NotAuthorized>
</AuthorizeView>


@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;
    
    private string navClass = "";
    int id = 0;
    protected override async Task OnInitializedAsync()
    {
        AuthenticationState authState = await AuthState;
        ClaimsPrincipal userblea = authState.User;
        if (userblea != null)
        {
            if (userblea.FindFirst("ID") != null)
            {
                string p = userblea.FindFirst("ID").Value;
                id = int.Parse(p);
            }

        }

    }

    private async Task LogOutAsync()
    {
        try
        {
            await userService.LogoutAsync();
            _nav.NavigateTo("/");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }
    
    private async Task RequestLandLordStatus()
    {
        try
        {
            await userService.SetUserStatusAsync(id, 6);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }

}