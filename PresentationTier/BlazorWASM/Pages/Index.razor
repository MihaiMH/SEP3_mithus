@page "/"
@using HttpClients.ClientInterfaces
@using Microsoft.VisualBasic.FileIO
@inject IPostService postService;
@inject NavigationManager _nav;

<div class="header">
    <div class="searchBox">
        <h1>Find Your Perfect Home</h1>
        <div class="searchBar">
            <div style="display: flex; padding: 5px; width: 100%; overflow: hidden;">
                <img src="img/image%201.png" alt="">
                <input type="text" @bind="searchQuery">
            </div>
            <a href="/Search/@searchArray" class="searchBtn" @onclick="SearchEvent" style="text-decoration: none">
                <div>
                    <p>Search</p>
                </div>
            </a>
        </div>

    </div>


    <img class="wave" src="img/waves 1.png" alt="">

</div>
<div class="showcase">
    <h3 class="body_title">
        <b>Newly Listed</b>
    </h3>
    <div class="container">
        <div class="wrapper" style="display: flex">
            @if (posts == null)
            {
                <span>Loading..</span>
            }
            else if (!posts.Any())
            {
                <span>No posts to be found</span>
            }
            else
            {
                    @foreach(var post in posts)
                    {
                        if (post.PostStatus.Status.Equals("Available"))
                        {
                            <ApprtCard PostObj="@post"/>
                        }


                    }
                
            }

        </div>
    </div>

    <div class="btnContainer">
        <p class="btnContainerText">Find the Perfect Home for You</p>
        <a href="/Search/">
        <button class="seeListingsbtn"  >Browse all Listings</button></a>
    </div>
</div>

@code {
    string searchQuery = "";
    string searchArray;
    static IEnumerable<Domain.Models.Post>? posts;

    void SearchEvent()
    {
        searchArray = searchQuery.Replace(' ', '&');
        _nav.NavigateTo($"/Search/{searchArray}" );
        Console.WriteLine(searchArray);
    }
    protected override async Task OnInitializedAsync()
    {
    // msg = "";
        searchQuery = "";
        try
        {
            posts = await postService.GetAllPostsAsync();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
    // msg = e.Message;
        }
    }
}