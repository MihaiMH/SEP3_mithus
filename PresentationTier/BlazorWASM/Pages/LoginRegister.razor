@page "/login"
@using Domain.DTOs
@using Domain.Models
@using HttpClients.ClientInterfaces
@namespace UIComponents
@inject IUserService UserService;
@inject NavigationManager _nav;


<div class="backgroundBox">
    <div class="container" id="container">

        <div class="form-container sign-up">
            <form>
                <h1>Create Account</h1>

                @* <span>or use your email for registeration</span> *@
                <input type="text" placeholder="First Name" @bind="RegFName" bind:event="oninput">
                <input type="text" placeholder="Last Name" @bind="RegLName" bind:event="oninput">
                <input type="email" placeholder="Email" @bind="RegEmail" bind:event="oninput">
                <input type="password" placeholder="Password" @bind="RegPassword" bind:event="oninput">
                <button class="blea" type="button" @onclick="Register" To="#">Sign Up</button>
                <p>@Registermsg</p>
            </form>
        </div>
        <div class="form-container sign-in">
            <form>
                <h1>Sign In</h1>

                @* <span>or use your email password</span> *@
                <input type="email" placeholder="Email" @bind="SignEmail" bind:event="oninput">
                <input type="password" placeholder="Password" @bind="SignPassword" bind:event="oninput">
                @* <a href="#">Forget Your Password?</a> *@
                <button class="blea" type="button" @onclick="Login">Sign In</button>
                <p>@Loginmsg</p>
            </form>
        </div>
        <div class="toggle-container">
            <div class="toggle">
                <div class="toggle-panel toggle-left">
                    <h1>Welcome Back!</h1>
                    <p>Enter your personal details to use all of site features</p>
                    <button class="hidden" id="login">Sign In</button>
                </div>
                <div class="toggle-panel toggle-right">
                    <h1>Hello, Friend!</h1>
                    <p>Register with your personal details to use all of site features</p>
                    <button class="hidden" id="register">Sign Up</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
const container = document.getElementById('container');
const registerBtn = document.getElementById('register');
const loginBtn = document.getElementById('login');

registerBtn.addEventListener('click', () => {
    container.classList.add("active");
});

loginBtn.addEventListener('click', () => {
    container.classList.remove("active");
});
</script>


@code {

    IEnumerable<Role> roles;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            roles = await UserService.GetRolesAsync();
            foreach (var roless in roles)
            {
                Console.WriteLine(roless);
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }

    static string RegFName { get; set; }
    static string RegLName { get; set; }
    static string RegEmail { get; set; }
    static string RegPassword { get; set; }

    static string SignEmail { get; set; }
    static string SignPassword { get; set; }

    string Registermsg = "";
    string Loginmsg;

    protected async Task Register()
    {            

        RegisterDTO register = new RegisterDTO
        {
            FirstName = RegFName,
            LastName = RegLName,
            Email = RegEmail,
            Password = RegPassword,
            Role = roles.ElementAt(0)
        };
        try
        {
            await UserService.RegisterAsync(register);
            Registermsg = "Registered Successfully";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            Registermsg = e.ToString();
        }
    }

    private void NavigateTo()
    {
    }

    protected async Task Login()
    {
        LoginDTO login = new LoginDTO
        {
            Email = SignEmail,
            Password = SignPassword
        };
        try
        {
            await UserService.LogInAsync(login);
            
            _nav.NavigateTo("/");
            Loginmsg = "Logged In Successfully";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            Loginmsg = "Email or Password are incorrect";
        }
    }


}