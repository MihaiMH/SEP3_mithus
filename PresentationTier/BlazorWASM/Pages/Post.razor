@page "/post/{id:int}"
@using HttpClients.ClientInterfaces
@using Domain.Models
@inject NavigationManager _nav;
@inject IPostService postService;
<HeaderEl title="@post.Title" description="@post.Description"/>
<div class="container">
    <div class="images">
        <div class="firstSection">
                @if (_images != null)
                {
                    @if (_images.Any())
                    {
                        @if (_images[0] != null)
                        {
                            <img src="@_images[0].Link" class="secondImg"/>

                        }
                    }
                }
        </div>
        <div class="secondSection">
            <div class="firstColumn">
                <div class="firstImage">
                    @if (_images.Count() >= 2)
                    {
                    @if (_images.ElementAt(1) != null)
                    {
                            <img src="@_images[1].Link" class="secondImg"/>
                    }
                    }
                </div>
                <div class="firstImage">
                    @if (_images.Count() >= 3)
                    {
                        if (_images.ElementAt(2) != null)
                        {
                            <img src="@_images.ElementAt(2).Link" class="secondImg"/>
                  }
                   }
                </div>
            </div>
            <div class="secondColumn">
                <div class="firstImage">
                    @if (_images.Count() >= 4 )
                    {
                        @if (_images.ElementAt(3) != null)
                        {
                            <img src="@_images.ElementAt(3).Link" class="secondImg"/>
                         }
                     }
                </div>
                <div class="firstImage">
                    @if (_images.Count() == 5)
                    {
                       @if (_images.ElementAt(4) != null)
                        {
                            <img src="@_images.ElementAt(4).Link" class="secondImg"/>
                        }
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="bodyDiv">
        <div class="firstBodyDiv">
            <h2>Highlights</h2>
            <div class="postItems">
                <div class="properties">
                    <h5>Type</h5>
                    <p>@housingType.Name</p>
                </div>
                <div class="properties">
                    <h5>Dimensions</h5>
                    <p>@post.Area</p>
                </div>
                <div class="properties">
                    <h5>Amenities</h5>
                    @if (_amenities == null)
                    {
                        <span>Loading..</span>
                    }
                    else if (!_amenities.Any())
                    {
                        <span>Empty</span>
                    }
                    else
                    {
                        <span>
                            @foreach (var amenity in post.Amenities)
                            {
                                <span>@amenity.Name </span>
                            }
                        </span>
                    }
                </div>
            </div>

            <div class="postItems">
                <div class="properties">
                    <h5>Utilities</h5>
                    <p>@cost.Utilities</p>

                </div>
                <div class="properties">
                    <h5>Deposit</h5>
                    <p>@cost.Deposit</p>
                </div>
                <div class="properties">
                    <h5>Monthly rent</h5>
                    <p>@cost.MonthlyRent</p>

                </div>
                <div class="properties">
                    <h5>Move in price</h5>
                    <p>@cost.MoveInPrice</p>
                </div>
            </div>
            <div class="postItems">
                <div class="properties">
                    <h5>Max Tenants</h5>
                    <p>@post.MaxTenants</p>

                </div>
                <div class="properties">
                    <h5>Energy rating</h5>
                    <p>@energyRating.Name</p>
                </div>
            </div>
        </div>
        <div class="">
            <div class="secondBodyDiv card">
                <h4>PRICE</h4>
                <h5 class="price">@cost.MonthlyRent kr.</h5>
                <hr>
                <h2>Schedule a Tour</h2>
                <input type="text" id="fname" name="firstname" placeholder="Full name..">

                <input type="number" id="phone" placeholder="Phone number..."/>

                <input type="text" id="date" name="date" placeholder="Date..">

                <div class="submitBtn">
                    <input type="submit" value="Book appointment">
                </div>
            </div>
        </div>
    </div>


    @* *@
    @* <div class="pageContent"> *@
    @*     <div class="containerr"> *@
    @*         <form action="action_page.php"> *@
    @* *@
    @*             <label for="title">Title</label> *@
    @* *@
    @*             <input type="text" id="title" placeholder="Title..." @bind=@post.Title readonly> *@
    @* *@
    @*             <label for="desription">Description</label> *@
    @*             <textarea type="text" id="description" placeholder="Description..." style="height:200px" @bind=@post.Description readonly></textarea> *@
    @* *@
    @*             <label for="price">Price</label> *@
    @*             <input type="number" id="price" placeholder="Price..." @bind=@post.Cost.MonthlyRent readonly/> *@
    @* *@
    @*             <label for="address">Address</label> *@
    @*             <input type="text" id="address" placeholder="Address..." @bind=@post.Address.Street readonly> *@
    @* *@
    @*             <label for="dimension">Dimensions</label> *@
    @*             <input type="number" id="dimension" placeholder="Dimensions..." @bind=@post.Area readonly/> *@
    @*             <div class="imageContainer"> *@
    @*                  @foreach (var image in _images) *@
    @*                             { *@
    @*                                 <img src="@image.Link" alt="image" class="image" style="width: 100px; height: 100px; border-radius: 50px;"> *@
    @*                             } *@
    @*             </div> *@
    @*         </form> *@
    @*     </div> *@
    @* </div> *@
    <AuthorizeView Policy="MustBeClient">
        <Authorized>
            @if (user.ID == int.Parse(context.User.FindFirst("ID").Value))
            {
                <div class="button-row">
                    <button type="button" @onclick="NavigateToEdit">Edit</button>
                </div>
            }
        </Authorized>
    </AuthorizeView>
    <AuthorizeView Policy="MustBeLandlord">
        <Authorized>
            @if (post.UserID.ID == int.Parse(context.User.FindFirst("ID").Value))
            {
                <button type="button" @onclick="NavigateToEdit">Edit</button>
            }
        </Authorized>
    </AuthorizeView>
    <AuthorizeView Policy="MustBeMod">
        <Authorized>
            <button type="button" @onclick="NavigateToEdit">Edit</button>
        </Authorized>
    </AuthorizeView>
    <AuthorizeView Policy="MustBeAdmin">
        <Authorized>
            <div class="buttonDiv">
                <button type="button" @onclick="NavigateToEdit">Edit</button>
            </div>
        </Authorized>
    </AuthorizeView>
</div>

@code {

    [Parameter]
    public int Id { get; set; }

    Domain.Models.Post post = new();
    Cost cost = new();
    Address address = new();
    User user = new();
    HousingType housingType = new();
    EnergyRating energyRating = new();
    List<Image> _images = new();
    List<Amenity> _amenities = new();


    protected override async Task OnInitializedAsync()
    {
    // msg = "";


        try
        {
            post = await postService.GetPostByPostIdAsync(Id);
            cost = post.Cost;
            address = post.Address;
            user = post.UserID;
            housingType = post.HousingType;
            energyRating = post.EnergyRating;
            user = post.UserID;
            _images = post.Images.ToList();
            _amenities = post.Amenities.ToList();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
    // msg = e.Message;
        }
    }

    public void NavigateToEdit()
    {
        _nav.NavigateTo($"/ManagePost/{Id}");
    }

}